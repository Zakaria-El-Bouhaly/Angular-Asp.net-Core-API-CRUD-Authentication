// <auto-generated />
using System;
using Colab.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Colab.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20230406205945_updt")]
    partial class updt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("Colab.Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("state")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Assignments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 10, 14, 10, 36, 28, 290, DateTimeKind.Local).AddTicks(1549),
                            Description = "Delectus eligendi re",
                            ProjectId = 5,
                            Title = "Intelligent Metal Pizza",
                            UpdatedAt = new DateTime(2022, 12, 4, 21, 43, 55, 371, DateTimeKind.Local).AddTicks(4882),
                            UserId = 1,
                            state = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 11, 9, 21, 16, 35, 360, DateTimeKind.Local).AddTicks(1928),
                            Description = "Ex qui facilis reici",
                            ProjectId = 7,
                            Title = "Small Concrete Salad",
                            UpdatedAt = new DateTime(2023, 3, 31, 9, 33, 50, 595, DateTimeKind.Local).AddTicks(681),
                            UserId = 4,
                            state = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 2, 28, 19, 21, 20, 200, DateTimeKind.Local).AddTicks(2970),
                            Description = "Illum aut enim quas ",
                            ProjectId = 4,
                            Title = "Fantastic Metal Car",
                            UpdatedAt = new DateTime(2022, 9, 5, 8, 25, 27, 965, DateTimeKind.Local).AddTicks(9649),
                            UserId = 5,
                            state = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 9, 27, 13, 41, 47, 381, DateTimeKind.Local).AddTicks(3619),
                            Description = "Iure vero perferendi",
                            ProjectId = 8,
                            Title = "Unbranded Concrete Shoes",
                            UpdatedAt = new DateTime(2022, 10, 9, 10, 56, 54, 801, DateTimeKind.Local).AddTicks(4625),
                            UserId = 1,
                            state = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 11, 21, 23, 29, 36, 560, DateTimeKind.Local).AddTicks(2725),
                            Description = "Ut sapiente qui qui ",
                            ProjectId = 7,
                            Title = "Ergonomic Frozen Cheese",
                            UpdatedAt = new DateTime(2023, 2, 2, 20, 11, 27, 439, DateTimeKind.Local).AddTicks(7450),
                            UserId = 1,
                            state = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 5, 12, 12, 1, 55, 193, DateTimeKind.Local).AddTicks(8326),
                            Description = "Hic autem dolor. Qui",
                            ProjectId = 7,
                            Title = "Gorgeous Fresh Fish",
                            UpdatedAt = new DateTime(2022, 8, 16, 12, 46, 33, 411, DateTimeKind.Local).AddTicks(3702),
                            UserId = 4,
                            state = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 9, 15, 15, 11, 36, 537, DateTimeKind.Local).AddTicks(7432),
                            Description = "Quidem ex ut exceptu",
                            ProjectId = 2,
                            Title = "Awesome Rubber Pants",
                            UpdatedAt = new DateTime(2022, 4, 20, 3, 58, 0, 706, DateTimeKind.Local).AddTicks(8813),
                            UserId = 2,
                            state = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 12, 21, 12, 26, 3, 289, DateTimeKind.Local).AddTicks(4702),
                            Description = "Quod eveniet error e",
                            ProjectId = 3,
                            Title = "Incredible Concrete Bacon",
                            UpdatedAt = new DateTime(2022, 9, 19, 13, 19, 58, 508, DateTimeKind.Local).AddTicks(7025),
                            UserId = 5,
                            state = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 8, 7, 21, 47, 13, 190, DateTimeKind.Local).AddTicks(8448),
                            Description = "In temporibus labori",
                            ProjectId = 8,
                            Title = "Fantastic Steel Shirt",
                            UpdatedAt = new DateTime(2022, 4, 14, 20, 37, 33, 153, DateTimeKind.Local).AddTicks(72),
                            UserId = 4,
                            state = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 2, 4, 22, 37, 40, 542, DateTimeKind.Local).AddTicks(23),
                            Description = "Numquam non cum aspe",
                            ProjectId = 9,
                            Title = "Small Concrete Mouse",
                            UpdatedAt = new DateTime(2022, 9, 10, 19, 28, 27, 851, DateTimeKind.Local).AddTicks(3453),
                            UserId = 1,
                            state = 0
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2022, 5, 14, 20, 53, 4, 3, DateTimeKind.Local).AddTicks(8535),
                            Description = "Voluptatem voluptati",
                            ProjectId = 3,
                            Title = "Gorgeous Granite Keyboard",
                            UpdatedAt = new DateTime(2022, 6, 16, 20, 20, 29, 189, DateTimeKind.Local).AddTicks(4845),
                            UserId = 1,
                            state = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2022, 4, 17, 3, 1, 59, 255, DateTimeKind.Local).AddTicks(5378),
                            Description = "Quisquam impedit ten",
                            ProjectId = 8,
                            Title = "Practical Cotton Chair",
                            UpdatedAt = new DateTime(2022, 9, 29, 10, 57, 1, 682, DateTimeKind.Local).AddTicks(3143),
                            UserId = 1,
                            state = 2
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2022, 4, 26, 18, 17, 34, 30, DateTimeKind.Local).AddTicks(2227),
                            Description = "Placeat provident mo",
                            ProjectId = 8,
                            Title = "Ergonomic Metal Chair",
                            UpdatedAt = new DateTime(2023, 1, 29, 15, 1, 18, 570, DateTimeKind.Local).AddTicks(881),
                            UserId = 1,
                            state = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2023, 3, 21, 3, 46, 10, 669, DateTimeKind.Local).AddTicks(8569),
                            Description = "Eum quisquam tenetur",
                            ProjectId = 2,
                            Title = "Licensed Metal Table",
                            UpdatedAt = new DateTime(2023, 2, 28, 21, 16, 0, 739, DateTimeKind.Local).AddTicks(5707),
                            UserId = 5,
                            state = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2022, 7, 1, 10, 29, 44, 637, DateTimeKind.Local).AddTicks(9038),
                            Description = "Rem maxime alias nob",
                            ProjectId = 10,
                            Title = "Unbranded Metal Towels",
                            UpdatedAt = new DateTime(2022, 11, 3, 2, 20, 6, 926, DateTimeKind.Local).AddTicks(1976),
                            UserId = 5,
                            state = 2
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2022, 7, 1, 10, 25, 59, 239, DateTimeKind.Local).AddTicks(2792),
                            Description = "Voluptas doloribus m",
                            ProjectId = 5,
                            Title = "Fantastic Frozen Table",
                            UpdatedAt = new DateTime(2022, 8, 28, 17, 46, 51, 878, DateTimeKind.Local).AddTicks(6676),
                            UserId = 1,
                            state = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2023, 3, 12, 16, 13, 57, 487, DateTimeKind.Local).AddTicks(3830),
                            Description = "Debitis maiores dele",
                            ProjectId = 1,
                            Title = "Practical Steel Towels",
                            UpdatedAt = new DateTime(2022, 5, 24, 8, 44, 36, 183, DateTimeKind.Local).AddTicks(5076),
                            UserId = 5,
                            state = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2022, 5, 8, 22, 59, 35, 335, DateTimeKind.Local).AddTicks(5661),
                            Description = "Aliquam impedit adip",
                            ProjectId = 2,
                            Title = "Rustic Rubber Tuna",
                            UpdatedAt = new DateTime(2022, 10, 2, 4, 42, 34, 344, DateTimeKind.Local).AddTicks(1987),
                            UserId = 4,
                            state = 0
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2022, 8, 31, 17, 28, 58, 753, DateTimeKind.Local).AddTicks(305),
                            Description = "Occaecati inventore ",
                            ProjectId = 10,
                            Title = "Tasty Rubber Hat",
                            UpdatedAt = new DateTime(2023, 1, 5, 12, 59, 34, 991, DateTimeKind.Local).AddTicks(7968),
                            UserId = 5,
                            state = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2022, 12, 22, 1, 9, 59, 184, DateTimeKind.Local).AddTicks(2290),
                            Description = "Sunt quaerat quos ha",
                            ProjectId = 7,
                            Title = "Awesome Concrete Chicken",
                            UpdatedAt = new DateTime(2022, 10, 11, 21, 51, 21, 895, DateTimeKind.Local).AddTicks(4613),
                            UserId = 4,
                            state = 2
                        });
                });

            modelBuilder.Entity("Colab.Models.EmailVerifTokens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmailVerifTokens");
                });

            modelBuilder.Entity("Colab.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 11, 22, 10, 51, 8, 701, DateTimeKind.Local).AddTicks(2689),
                            Description = "Commodi non consecte",
                            Title = "Intelligent Rubber Ball",
                            UpdatedAt = new DateTime(2022, 6, 28, 11, 32, 56, 367, DateTimeKind.Local).AddTicks(8108)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 10, 16, 3, 43, 48, 631, DateTimeKind.Local).AddTicks(9174),
                            Description = "Nostrum voluptatum i",
                            Title = "Licensed Frozen Keyboard",
                            UpdatedAt = new DateTime(2022, 6, 21, 2, 59, 30, 57, DateTimeKind.Local).AddTicks(6934)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 11, 24, 18, 9, 39, 252, DateTimeKind.Local).AddTicks(3531),
                            Description = "Sapiente et cupidita",
                            Title = "Unbranded Metal Salad",
                            UpdatedAt = new DateTime(2022, 10, 29, 13, 52, 39, 233, DateTimeKind.Local).AddTicks(8861)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 8, 15, 5, 35, 22, 831, DateTimeKind.Local).AddTicks(1368),
                            Description = "Eos incidunt nesciun",
                            Title = "Awesome Fresh Bacon",
                            UpdatedAt = new DateTime(2022, 8, 22, 2, 36, 23, 69, DateTimeKind.Local).AddTicks(7868)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 6, 13, 13, 6, 42, 622, DateTimeKind.Local).AddTicks(7763),
                            Description = "Et ullam quo volupta",
                            Title = "Rustic Frozen Tuna",
                            UpdatedAt = new DateTime(2022, 7, 28, 0, 15, 39, 32, DateTimeKind.Local).AddTicks(5777)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 7, 16, 5, 15, 10, 39, DateTimeKind.Local).AddTicks(5014),
                            Description = "Dolores eius at labo",
                            Title = "Practical Steel Towels",
                            UpdatedAt = new DateTime(2022, 6, 21, 16, 41, 9, 508, DateTimeKind.Local).AddTicks(7475)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 5, 27, 12, 30, 43, 451, DateTimeKind.Local).AddTicks(6213),
                            Description = "Odit consectetur inc",
                            Title = "Awesome Plastic Salad",
                            UpdatedAt = new DateTime(2023, 1, 28, 2, 32, 33, 665, DateTimeKind.Local).AddTicks(810)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 4, 18, 22, 22, 10, 125, DateTimeKind.Local).AddTicks(3852),
                            Description = "Harum maxime ipsum e",
                            Title = "Practical Rubber Cheese",
                            UpdatedAt = new DateTime(2022, 11, 11, 1, 34, 36, 827, DateTimeKind.Local).AddTicks(7496)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 5, 19, 19, 22, 49, 330, DateTimeKind.Local).AddTicks(9212),
                            Description = "Odit ipsa pariatur n",
                            Title = "Awesome Soft Salad",
                            UpdatedAt = new DateTime(2022, 10, 9, 14, 15, 20, 522, DateTimeKind.Local).AddTicks(1708)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 2, 23, 4, 36, 16, 870, DateTimeKind.Local).AddTicks(5872),
                            Description = "Possimus blanditiis ",
                            Title = "Awesome Soft Chicken",
                            UpdatedAt = new DateTime(2022, 5, 7, 6, 27, 44, 401, DateTimeKind.Local).AddTicks(9106)
                        });
                });

            modelBuilder.Entity("Colab.Models.ProjectUser", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProjectId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectUser");
                });

            modelBuilder.Entity("Colab.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("profilePicture")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Clair.Armstrong@gmail.com",
                            IsAdmin = false,
                            IsVerified = false,
                            Name = "Terrance Yost",
                            Password = "$2a$11$DWVaVHU84mKxkh60rDYCBeD0a2q.fuxS/ob9iSK8ZoCcQN.Tiy.zy",
                            profilePicture = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1221.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Aletha65@gmail.com",
                            IsAdmin = false,
                            IsVerified = false,
                            Name = "Rocky Bins",
                            Password = "$2a$11$ld4b26Tj8ttjXhCVw3Lg/.x5slVjxjVvFg3iI8itmjOre4A4ZoM.m",
                            profilePicture = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/561.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Efren50@hotmail.com",
                            IsAdmin = false,
                            IsVerified = false,
                            Name = "Gavin Kilback",
                            Password = "$2a$11$T3sal18Z5yipe7MdRpAnDOnM9oa7UNTGsmf7h4eJhfKkORQQlQQNS",
                            profilePicture = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/377.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Lazaro.Shanahan@yahoo.com",
                            IsAdmin = false,
                            IsVerified = false,
                            Name = "Erick Murphy",
                            Password = "$2a$11$7E4//9k48X2XeaIjsEMcwuLmnFxe/BecNdTgpg1d9Gmz5EE4kccuS",
                            profilePicture = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/129.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Email = "Waylon.Schamberger12@gmail.com",
                            IsAdmin = false,
                            IsVerified = false,
                            Name = "Taya Labadie",
                            Password = "$2a$11$2fWJE0JAtDWMgmRcOSBEIu7F4eXYdRz6JcsRVVxSXHR2HhpN.Dtfq",
                            profilePicture = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/932.jpg"
                        });
                });

            modelBuilder.Entity("Colab.Models.Assignment", b =>
                {
                    b.HasOne("Colab.Models.Project", "Project")
                        .WithMany("Assignments")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Colab.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Colab.Models.EmailVerifTokens", b =>
                {
                    b.HasOne("Colab.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Colab.Models.ProjectUser", b =>
                {
                    b.HasOne("Colab.Models.Project", "Project")
                        .WithMany("Participators")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Colab.Models.User", "User")
                        .WithMany("Participations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Colab.Models.Project", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Participators");
                });

            modelBuilder.Entity("Colab.Models.User", b =>
                {
                    b.Navigation("Participations");
                });
#pragma warning restore 612, 618
        }
    }
}
